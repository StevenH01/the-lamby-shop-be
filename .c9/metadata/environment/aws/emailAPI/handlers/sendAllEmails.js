{"filter":false,"title":"sendAllEmails.js","tooltip":"/aws/emailAPI/handlers/sendAllEmails.js","undoManager":{"mark":27,"position":27,"stack":[[{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"insert","lines":["import { DynamoDBClient } from '@aws-sdk/client-dynamodb';","import { DynamoDBDocumentClient, PutCommand, ScanCommand } from '@aws-sdk/lib-dynamodb';","","const client = new DynamoDBClient({ region: 'us-west-2' });","const ddbDocClient = DynamoDBDocumentClient.from(client);","","const tableName = 'subscriptionTable';","","export const addEmailHandler = async (event) => {","    console.info('received:', JSON.stringify(event));","","    const isRunningLocally = process.env.AWS_SAM_LOCAL;","    let payload;","    if (isRunningLocally) {","        console.log(\"isRunningLocally =\", isRunningLocally);","        payload = event.body;","    } else {","        console.log(\"isRunningLocally =\", isRunningLocally);","        payload = JSON.parse(event.body);","    }","","    console.info('Logging payload:', JSON.stringify(payload));","","    try {","        // Check if the email already exists","        const scanParams = {","            TableName: tableName,","            FilterExpression: 'email = :email',","            ExpressionAttributeValues: { ':email': payload.email }","        };","","        console.log(\"Checking if email already exists\");","        const scanResult = await ddbDocClient.send(new ScanCommand(scanParams));","","        if (scanResult.Items && scanResult.Items.length > 0) {","            // Email already exists","            console.log(\"Email already exists, skipping insert\");","            return {","                statusCode: 200,","                headers: {","                    \"Access-Control-Allow-Origin\": \"*\",","                    \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","                },","                body: JSON.stringify({ message: \"Email already exists\" })","            };","        }","","        // If email does not exist, add it to the table","        const putParams = {","            TableName: tableName,","            Item: payload","        };","","        console.log(\"Adding email to the table\");","        await ddbDocClient.send(new PutCommand(putParams));","        console.log(\"Success - email added\");","","        const response = {","            statusCode: 200,","            headers: {","                \"Access-Control-Allow-Origin\": \"*\",","                \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","            },","            body: JSON.stringify({ message: \"Email added successfully\", email: payload.email })","        };","","        console.info(`statusCode: ${response.statusCode}`);","        return response;","","    } catch (err) {","        console.error(\"Error\", err.stack);","        return {","            statusCode: 500,","            body: JSON.stringify({ message: \"An error occurred\", error: err.message })","        };","    }","};",""],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":79,"column":0},"action":"remove","lines":["import { DynamoDBClient } from '@aws-sdk/client-dynamodb';","import { DynamoDBDocumentClient, PutCommand, ScanCommand } from '@aws-sdk/lib-dynamodb';","","const client = new DynamoDBClient({ region: 'us-west-2' });","const ddbDocClient = DynamoDBDocumentClient.from(client);","","const tableName = 'subscriptionTable';","","export const addEmailHandler = async (event) => {","    console.info('received:', JSON.stringify(event));","","    const isRunningLocally = process.env.AWS_SAM_LOCAL;","    let payload;","    if (isRunningLocally) {","        console.log(\"isRunningLocally =\", isRunningLocally);","        payload = event.body;","    } else {","        console.log(\"isRunningLocally =\", isRunningLocally);","        payload = JSON.parse(event.body);","    }","","    console.info('Logging payload:', JSON.stringify(payload));","","    try {","        // Check if the email already exists","        const scanParams = {","            TableName: tableName,","            FilterExpression: 'email = :email',","            ExpressionAttributeValues: { ':email': payload.email }","        };","","        console.log(\"Checking if email already exists\");","        const scanResult = await ddbDocClient.send(new ScanCommand(scanParams));","","        if (scanResult.Items && scanResult.Items.length > 0) {","            // Email already exists","            console.log(\"Email already exists, skipping insert\");","            return {","                statusCode: 200,","                headers: {","                    \"Access-Control-Allow-Origin\": \"*\",","                    \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","                },","                body: JSON.stringify({ message: \"Email already exists\" })","            };","        }","","        // If email does not exist, add it to the table","        const putParams = {","            TableName: tableName,","            Item: payload","        };","","        console.log(\"Adding email to the table\");","        await ddbDocClient.send(new PutCommand(putParams));","        console.log(\"Success - email added\");","","        const response = {","            statusCode: 200,","            headers: {","                \"Access-Control-Allow-Origin\": \"*\",","                \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","            },","            body: JSON.stringify({ message: \"Email added successfully\", email: payload.email })","        };","","        console.info(`statusCode: ${response.statusCode}`);","        return response;","","    } catch (err) {","        console.error(\"Error\", err.stack);","        return {","            statusCode: 500,","            body: JSON.stringify({ message: \"An error occurred\", error: err.message })","        };","    }","};",""],"id":2},{"start":{"row":0,"column":0},"end":{"row":70,"column":0},"action":"insert","lines":["import { DynamoDBClient, ScanCommand } from '@aws-sdk/client-dynamodb';","import { SESClient, SendEmailCommand } from '@aws-sdk/client-ses';","import { DynamoDBDocumentClient } from '@aws-sdk/lib-dynamodb';","","const ddbClient = new DynamoDBClient({ region: 'us-west-2' });","const ddbDocClient = DynamoDBDocumentClient.from(ddbClient);","const sesClient = new SESClient({ region: 'us-west-2' });","","const tableName = 'subscriptionTable'; // DynamoDB table storing subscriber emails","","export const handler = async (event) => {","    try {","        // Parse the incoming request body","        const { subject, body } = JSON.parse(event.body);","","        if (!subject || !body) {","            return {","                statusCode: 400,","                body: JSON.stringify({ message: \"Subject and body are required.\" }),","            };","        }","","        // Fetch all emails from DynamoDB","        const scanParams = {","            TableName: tableName,","            ProjectionExpression: \"email\", // Assuming the table has an 'email' attribute","        };","","        const scanResult = await ddbDocClient.send(new ScanCommand(scanParams));","        const emails = scanResult.Items.map((item) => item.email);","","        if (emails.length === 0) {","            return {","                statusCode: 404,","                body: JSON.stringify({ message: \"No subscribers found.\" }),","            };","        }","","        // Send email to each subscriber","        const sendEmailPromises = emails.map((email) =>","            sesClient.send(new SendEmailCommand({","                Destination: {","                    ToAddresses: [email],","                },","                Message: {","                    Body: {","                        Text: { Data: body },","                    },","                    Subject: { Data: subject },","                },","                Source: \"your-email@example.com\", // Replace with a verified email in SES","            }))","        );","","        // Wait for all emails to be sent","        await Promise.all(sendEmailPromises);","","        return {","            statusCode: 200,","            body: JSON.stringify({ message: \"Emails sent successfully.\" }),","        };","","    } catch (error) {","        console.error(\"Error sending emails:\", error);","        return {","            statusCode: 500,","            body: JSON.stringify({ message: \"An error occurred while sending emails.\", error: error.message }),","        };","    }","};",""]}],[{"start":{"row":50,"column":25},"end":{"row":50,"column":47},"action":"remove","lines":["your-email@example.com"],"id":3},{"start":{"row":50,"column":25},"end":{"row":50,"column":26},"action":"insert","lines":["t"]},{"start":{"row":50,"column":26},"end":{"row":50,"column":27},"action":"insert","lines":["h"]},{"start":{"row":50,"column":27},"end":{"row":50,"column":28},"action":"insert","lines":["e"]},{"start":{"row":50,"column":28},"end":{"row":50,"column":29},"action":"insert","lines":["l"]},{"start":{"row":50,"column":29},"end":{"row":50,"column":30},"action":"insert","lines":["a"]},{"start":{"row":50,"column":30},"end":{"row":50,"column":31},"action":"insert","lines":["m"]},{"start":{"row":50,"column":31},"end":{"row":50,"column":32},"action":"insert","lines":["b"]},{"start":{"row":50,"column":32},"end":{"row":50,"column":33},"action":"insert","lines":["y"]},{"start":{"row":50,"column":33},"end":{"row":50,"column":34},"action":"insert","lines":["s"]},{"start":{"row":50,"column":34},"end":{"row":50,"column":35},"action":"insert","lines":["h"]},{"start":{"row":50,"column":35},"end":{"row":50,"column":36},"action":"insert","lines":["o"]},{"start":{"row":50,"column":36},"end":{"row":50,"column":37},"action":"insert","lines":["p"]},{"start":{"row":50,"column":37},"end":{"row":50,"column":38},"action":"insert","lines":["@"]}],[{"start":{"row":50,"column":38},"end":{"row":50,"column":39},"action":"insert","lines":["g"],"id":4},{"start":{"row":50,"column":39},"end":{"row":50,"column":40},"action":"insert","lines":["m"]},{"start":{"row":50,"column":40},"end":{"row":50,"column":41},"action":"insert","lines":["a"]},{"start":{"row":50,"column":41},"end":{"row":50,"column":42},"action":"insert","lines":["i"]},{"start":{"row":50,"column":42},"end":{"row":50,"column":43},"action":"insert","lines":["l"]},{"start":{"row":50,"column":43},"end":{"row":50,"column":44},"action":"insert","lines":["."]},{"start":{"row":50,"column":44},"end":{"row":50,"column":45},"action":"insert","lines":["c"]},{"start":{"row":50,"column":45},"end":{"row":50,"column":46},"action":"insert","lines":["o"]},{"start":{"row":50,"column":46},"end":{"row":50,"column":47},"action":"insert","lines":["m"]}],[{"start":{"row":58,"column":28},"end":{"row":59,"column":0},"action":"insert","lines":["",""],"id":5},{"start":{"row":59,"column":0},"end":{"row":59,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":59,"column":12},"end":{"row":63,"column":18},"action":"insert","lines":["                headers: {","                    \"Access-Control-Allow-Origin\": \"*\",","                    \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                    \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","                },"],"id":6}],[{"start":{"row":63,"column":12},"end":{"row":63,"column":16},"action":"remove","lines":["    "],"id":7},{"start":{"row":63,"column":8},"end":{"row":63,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":63,"column":8},"end":{"row":63,"column":12},"action":"insert","lines":["    "],"id":8}],[{"start":{"row":62,"column":8},"end":{"row":62,"column":12},"action":"remove","lines":["    "],"id":9},{"start":{"row":62,"column":4},"end":{"row":62,"column":8},"action":"remove","lines":["    "]}],[{"start":{"row":62,"column":4},"end":{"row":62,"column":8},"action":"insert","lines":["    "],"id":10}],[{"start":{"row":61,"column":4},"end":{"row":61,"column":8},"action":"remove","lines":["    "],"id":11}],[{"start":{"row":60,"column":0},"end":{"row":60,"column":4},"action":"remove","lines":["    "],"id":12}],[{"start":{"row":59,"column":24},"end":{"row":59,"column":28},"action":"remove","lines":["    "],"id":14},{"start":{"row":59,"column":20},"end":{"row":59,"column":24},"action":"remove","lines":["    "]},{"start":{"row":59,"column":16},"end":{"row":59,"column":20},"action":"remove","lines":["    "]},{"start":{"row":59,"column":12},"end":{"row":59,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":70,"column":28},"end":{"row":71,"column":0},"action":"insert","lines":["",""],"id":15},{"start":{"row":71,"column":0},"end":{"row":71,"column":12},"action":"insert","lines":["            "]}],[{"start":{"row":71,"column":12},"end":{"row":75,"column":14},"action":"insert","lines":["            headers: {","                \"Access-Control-Allow-Origin\": \"*\",","                \"Access-Control-Allow-Headers\": \"Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token\",","                \"Access-Control-Allow-Methods\": \"GET,POST,PUT,DELETE,OPTIONS\",","            },"],"id":16}],[{"start":{"row":71,"column":20},"end":{"row":71,"column":24},"action":"remove","lines":["    "],"id":17},{"start":{"row":71,"column":16},"end":{"row":71,"column":20},"action":"remove","lines":["    "]},{"start":{"row":71,"column":12},"end":{"row":71,"column":16},"action":"remove","lines":["    "]}],[{"start":{"row":36,"column":9},"end":{"row":37,"column":0},"action":"insert","lines":["",""],"id":18},{"start":{"row":37,"column":0},"end":{"row":37,"column":8},"action":"insert","lines":["        "]},{"start":{"row":37,"column":8},"end":{"row":38,"column":0},"action":"insert","lines":["",""]},{"start":{"row":38,"column":0},"end":{"row":38,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":38,"column":8},"end":{"row":39,"column":47},"action":"insert","lines":["        const footer = \"\\n\\nThank you,\\nThe Lamby Shop\";","        const fullMessage = `${body}${footer}`;"],"id":19}],[{"start":{"row":38,"column":12},"end":{"row":38,"column":16},"action":"remove","lines":["    "],"id":20},{"start":{"row":38,"column":8},"end":{"row":38,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":38,"column":28},"end":{"row":38,"column":34},"action":"remove","lines":["Thank "],"id":21},{"start":{"row":38,"column":28},"end":{"row":38,"column":29},"action":"insert","lines":["S"]},{"start":{"row":38,"column":29},"end":{"row":38,"column":30},"action":"insert","lines":["e"]},{"start":{"row":38,"column":30},"end":{"row":38,"column":31},"action":"insert","lines":["e"]}],[{"start":{"row":38,"column":31},"end":{"row":38,"column":32},"action":"insert","lines":[" "],"id":22}],[{"start":{"row":38,"column":35},"end":{"row":38,"column":36},"action":"insert","lines":[" "],"id":23},{"start":{"row":38,"column":36},"end":{"row":38,"column":37},"action":"insert","lines":["s"]},{"start":{"row":38,"column":37},"end":{"row":38,"column":38},"action":"insert","lines":["o"]},{"start":{"row":38,"column":38},"end":{"row":38,"column":39},"action":"insert","lines":["o"]},{"start":{"row":38,"column":39},"end":{"row":38,"column":40},"action":"insert","lines":["n"]}],[{"start":{"row":38,"column":40},"end":{"row":38,"column":41},"action":"remove","lines":[","],"id":24},{"start":{"row":38,"column":40},"end":{"row":38,"column":41},"action":"insert","lines":["!"]}],[{"start":{"row":38,"column":0},"end":{"row":39,"column":47},"action":"remove","lines":["        const footer = \"\\n\\nSee you soon!\\nThe Lamby Shop\";","        const fullMessage = `${body}${footer}`;"],"id":25}],[{"start":{"row":20,"column":9},"end":{"row":21,"column":0},"action":"insert","lines":["",""],"id":26},{"start":{"row":21,"column":0},"end":{"row":21,"column":8},"action":"insert","lines":["        "]},{"start":{"row":21,"column":8},"end":{"row":22,"column":0},"action":"insert","lines":["",""]},{"start":{"row":22,"column":0},"end":{"row":22,"column":8},"action":"insert","lines":["        "]}],[{"start":{"row":22,"column":8},"end":{"row":23,"column":47},"action":"insert","lines":["        const footer = \"\\n\\nSee you soon!\\nThe Lamby Shop\";","        const fullMessage = `${body}${footer}`;"],"id":27}],[{"start":{"row":22,"column":12},"end":{"row":22,"column":16},"action":"remove","lines":["    "],"id":28},{"start":{"row":22,"column":8},"end":{"row":22,"column":12},"action":"remove","lines":["    "]}],[{"start":{"row":51,"column":38},"end":{"row":51,"column":42},"action":"remove","lines":["body"],"id":29},{"start":{"row":51,"column":38},"end":{"row":51,"column":39},"action":"insert","lines":["f"]},{"start":{"row":51,"column":39},"end":{"row":51,"column":40},"action":"insert","lines":["u"]},{"start":{"row":51,"column":40},"end":{"row":51,"column":41},"action":"insert","lines":["l"]},{"start":{"row":51,"column":41},"end":{"row":51,"column":42},"action":"insert","lines":["l"]},{"start":{"row":51,"column":42},"end":{"row":51,"column":43},"action":"insert","lines":["M"]},{"start":{"row":51,"column":43},"end":{"row":51,"column":44},"action":"insert","lines":["e"]},{"start":{"row":51,"column":44},"end":{"row":51,"column":45},"action":"insert","lines":["s"]},{"start":{"row":51,"column":45},"end":{"row":51,"column":46},"action":"insert","lines":["s"]},{"start":{"row":51,"column":46},"end":{"row":51,"column":47},"action":"insert","lines":["a"]},{"start":{"row":51,"column":47},"end":{"row":51,"column":48},"action":"insert","lines":["g"]},{"start":{"row":51,"column":48},"end":{"row":51,"column":49},"action":"insert","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":919,"scrollleft":0,"selection":{"start":{"row":48,"column":18},"end":{"row":48,"column":18},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":12,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1731465149048,"hash":"176a2f73032cf4e9941df491ac1c4fbdddca7fd7"}