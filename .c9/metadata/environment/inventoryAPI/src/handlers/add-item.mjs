{"filter":false,"title":"add-item.mjs","tooltip":"/inventoryAPI/src/handlers/add-item.mjs","undoManager":{"mark":32,"position":32,"stack":[[{"start":{"row":0,"column":0},"end":{"row":26,"column":0},"action":"remove","lines":["/**"," *"," * Event doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html#api-gateway-simple-proxy-for-lambda-input-format"," * @param {Object} event - API Gateway Lambda Proxy Input Format"," *"," * Context doc: https://docs.aws.amazon.com/lambda/latest/dg/nodejs-prog-model-context.html "," * @param {Object} context"," *"," * Return doc: https://docs.aws.amazon.com/apigateway/latest/developerguide/set-up-lambda-proxy-integrations.html"," * @returns {Object} object - API Gateway Lambda Proxy Output Format"," * "," */","","export const lambdaHandler = async (event, context) => {","    try {","        return {","            'statusCode': 200,","            'body': JSON.stringify({","                message: 'hello world',","            })","        }","    } catch (err) {","        console.log(err);","        return err;","    }","};",""],"id":49},{"start":{"row":0,"column":0},"end":{"row":216,"column":2},"action":"insert","lines":["// Create clients and set shared const values outside of the handler.","","// Create a DocumentClient that represents the query to add an item","import { DynamoDBClient } from '@aws-sdk/client-dynamodb';","import { DynamoDBDocumentClient, PutCommand, ScanCommand, UpdateCommand } from '@aws-sdk/lib-dynamodb';","const client = new DynamoDBClient({region: 'us-west-2'});","const ddbDocClient = DynamoDBDocumentClient.from(client);","import {putObject} from './s3.mjs'","","// Get the DynamoDB table name from environment variables","// const tableName = process.env.CITIZEN_TABLE;","const tableCount = 'citizenTable-Count';","const tableName = 'citizenTable';","let previousDL = '';","let allItemsRetrieved = false;","var count = 0;","","// Function that generates a random number to be used in the documentNumber","function generateRandomNumber() {","    const maxLength = 25;","    let randomNumber = \"\";","  ","    for (let i = 0; i < maxLength; i++) {","      randomNumber += Math.floor(Math.random() * 10);","    }","  ","    return randomNumber;","  }","","function generateDLNumber() {","    const maxLength = 5;","    let randomNumber = \"\";","    let prefix = \"I99\";","    for (let i = 0; i < maxLength; i++) {","      randomNumber += Math.floor(Math.random() * 10);","    }","  ","    return prefix + randomNumber;","  }","","function calculateDLNumber(oldDL) {","  const maxLength = 5;","  let prefix = \"II9\";","  // Retrieve last 5 characters","  // const oldValue = oldDL.slice(-maxLength);","  // Increment the number by 1 and pad it with '0'","  // const newValue = parseInt(oldValue) + 1;","  const newValue = oldDL + 1;","  const newDL = String(newValue).padStart(maxLength, '0');","  ","  return prefix + newDL;","}","const uploadToS3 = async (key, content) => {","  var bucket = process.env.S3_BUCKET;","  console.log(\"bucket=\" + bucket);","  console.log(\"key=\" + key);","  console.log(\"content=\" + content);","","  ","","","  return prefix + newDL;","}","","/**"," * A simple example includes a HTTP post method to add one item to a DynamoDB table."," */","export const addCitizenHandler = async (event) => {","    // if (event.httpMethod !== 'POST') {","    //     throw new Error(`postMethod only accepts POST method, you tried: ${event.httpMethod} method.`);","    // }","    // All log statements are written to CloudWatch","    console.info('received:', JSON.stringify(event));","","    // let processEnvironment = process.env.AWS_SAM_LOCAL;","    // console.log(processEnvironment);","","    // if (processEnvironment == 'true') {","    //   console.log(\"Process is running locally\");","    // }","    ","    // Retrieve the most recent DL number in order to generate the new DL number properly","    var request = {","      TableName : tableCount,","      // ProjectionExpression : \"Count\",","      ConsistentRead : true,","      // Limit: 1,","    };","    try {","        const requestedData = await ddbDocClient.send(new ScanCommand(request));","        count = (requestedData.Items[0].itemCount);","        var newCount = count + 1;","        console.log(\"New count:\", newCount);","","        const command = new UpdateCommand({","          TableName : tableCount,","          Key : {","            documentNumber : \"documentNumber\"","          },","          UpdateExpression : \"set itemCount = :newCount\",","          ExpressionAttributeValues : {","            \":newCount\" : newCount,","          },","          ReturnValues : \"ALL_NEW\"","        });","        await ddbDocClient.send(command);","","        previousDL = count;","        console.log('Previous documentNumber:', previousDL);","        // Calculate new documentNumber","        var calculatedNumber = calculateDLNumber(previousDL);","","      } catch (err) {","        console.log(\"Error: \", err);","    }","","    ","    // Echo the the value of \"requestId\" from the request header into \"responseId\"","    // var responseId = event.headerParameters.requestId;","","    // When testing with Postman or API Gateway, use JSON.parse()","    const isRunningLocally = process.env.AWS_SAM_LOCAL;","    var payload;","    if (isRunningLocally) {","      console.log(\"isRunningLocally =\", isRunningLocally);","      payload = event.body;","    }","    else {","      console.log(\"isRunningLocally =\", isRunningLocally);","      payload = JSON.parse(event.body);","    }","    // When testing with local JSON file, don't use JSON.parse()","    // const payload = event.body;","","    // Log payload in CloudWatch for potential issues","    console.info('Logging payload:', JSON.stringify(payload));","","    try {","      var bucket = process.env.S3_BUCKET;","      var portraitkey = calculatedNumber + \"_portrait.txt\";","      var idImageBackKey = calculatedNumber + \"_idImageBack.txt\";","      var idImageFrontKey = calculatedNumber + \"_idImageFront.txt\";","       ","      var putPortraitResponse = await putObject(bucket,portraitkey,payload.portrait);","      var putIdImageBackResponse = await putObject(bucket, idImageBackKey,payload.idImageBack);","      var putIdImageFrontResponse = await putObject(bucket, idImageFrontKey,payload.idImageFront);","      ","      console.log(\"putPortraitResponse\", putPortraitResponse);","      console.log(\"putIdImageBackResponse\", putIdImageBackResponse);","      console.log(\"putIdImageFrontResponse\", putIdImageFrontResponse);","      ","    } catch (err) {","        console.log(\"Error: \", err);","    }","    payload.documentNumber = calculatedNumber;","    payload.portrait = portraitkey;","    payload.idImageBack = idImageBackKey;","    payload.idImageFront = idImageFrontKey;","    ","    /*","    const updatedPayload = {","        ...payloadToUpdate,","        ...payload","    }","  ","    */","","    // Initialize the errors","    var error = \"N/A\";","    ","    // Creates a new item","    // https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB/DocumentClient.html#put-property","    var params = {","        TableName : tableName,","        Item: payload","    };","    console.log(\"payload=\");","    console.log(payload);","","    try {","        console.log(\"PutCommand\");","        const data = await ddbDocClient.send(new PutCommand(params));","        var item = data.Item;","        console.log(\"Success - citizen added\");","      } catch (err) {","        error = err.stack;","        console.log(\"Error\", err.stack);","      }","","    // Create an error array","    // var errorArray = {","    //     error: error,","    //     message: error","    // };","    var errorArray = [ ","      {error : error},","      {message : error}","    ];","","    //console.log(errorArray);","","    const response = {","        statusCode: 200,","        // responseId: responseId,","        // documentNumber: generatedNumber,","        // error: errorArray","        // body: JSON.stringify(item)","        body: JSON.stringify({ documentNumber: calculatedNumber, errors: errorArray })","    };","","    // All log statements are written to CloudWatch","    console.info(`statusCode: ${response.statusCode}`);","    // console.log(`responseId: ` + responseId);","    console.log(`documentNumber: ` + calculatedNumber);","    console.log(`errors: ` + JSON.stringify(errorArray));","    return response;","};"]}],[{"start":{"row":13,"column":0},"end":{"row":66,"column":3},"action":"remove","lines":["let previousDL = '';","let allItemsRetrieved = false;","var count = 0;","","// Function that generates a random number to be used in the documentNumber","function generateRandomNumber() {","    const maxLength = 25;","    let randomNumber = \"\";","  ","    for (let i = 0; i < maxLength; i++) {","      randomNumber += Math.floor(Math.random() * 10);","    }","  ","    return randomNumber;","  }","","function generateDLNumber() {","    const maxLength = 5;","    let randomNumber = \"\";","    let prefix = \"I99\";","    for (let i = 0; i < maxLength; i++) {","      randomNumber += Math.floor(Math.random() * 10);","    }","  ","    return prefix + randomNumber;","  }","","function calculateDLNumber(oldDL) {","  const maxLength = 5;","  let prefix = \"II9\";","  // Retrieve last 5 characters","  // const oldValue = oldDL.slice(-maxLength);","  // Increment the number by 1 and pad it with '0'","  // const newValue = parseInt(oldValue) + 1;","  const newValue = oldDL + 1;","  const newDL = String(newValue).padStart(maxLength, '0');","  ","  return prefix + newDL;","}","const uploadToS3 = async (key, content) => {","  var bucket = process.env.S3_BUCKET;","  console.log(\"bucket=\" + bucket);","  console.log(\"key=\" + key);","  console.log(\"content=\" + content);","","  ","","","  return prefix + newDL;","}","","/**"," * A simple example includes a HTTP post method to add one item to a DynamoDB table."," */"],"id":50}],[{"start":{"row":14,"column":16},"end":{"row":14,"column":23},"action":"remove","lines":["Citizen"],"id":51},{"start":{"row":14,"column":16},"end":{"row":14,"column":17},"action":"insert","lines":["I"]},{"start":{"row":14,"column":17},"end":{"row":14,"column":18},"action":"insert","lines":["t"]},{"start":{"row":14,"column":18},"end":{"row":14,"column":19},"action":"insert","lines":["e"]},{"start":{"row":14,"column":19},"end":{"row":14,"column":20},"action":"insert","lines":["m"]}],[{"start":{"row":6,"column":57},"end":{"row":7,"column":34},"action":"remove","lines":["","import {putObject} from './s3.mjs'"],"id":52}],[{"start":{"row":27,"column":0},"end":{"row":60,"column":5},"action":"remove","lines":["    // Retrieve the most recent DL number in order to generate the new DL number properly","    var request = {","      TableName : tableCount,","      // ProjectionExpression : \"Count\",","      ConsistentRead : true,","      // Limit: 1,","    };","    try {","        const requestedData = await ddbDocClient.send(new ScanCommand(request));","        count = (requestedData.Items[0].itemCount);","        var newCount = count + 1;","        console.log(\"New count:\", newCount);","","        const command = new UpdateCommand({","          TableName : tableCount,","          Key : {","            documentNumber : \"documentNumber\"","          },","          UpdateExpression : \"set itemCount = :newCount\",","          ExpressionAttributeValues : {","            \":newCount\" : newCount,","          },","          ReturnValues : \"ALL_NEW\"","        });","        await ddbDocClient.send(command);","","        previousDL = count;","        console.log('Previous documentNumber:', previousDL);","        // Calculate new documentNumber","        var calculatedNumber = calculateDLNumber(previousDL);","","      } catch (err) {","        console.log(\"Error: \", err);","    }"],"id":53},{"start":{"row":26,"column":4},"end":{"row":27,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":20,"column":0},"end":{"row":31,"column":0},"action":"remove","lines":["    // let processEnvironment = process.env.AWS_SAM_LOCAL;","    // console.log(processEnvironment);","","    // if (processEnvironment == 'true') {","    //   console.log(\"Process is running locally\");","    // }","    ","","    ","    // Echo the the value of \"requestId\" from the request header into \"responseId\"","    // var responseId = event.headerParameters.requestId;",""],"id":54},{"start":{"row":19,"column":0},"end":{"row":20,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":21,"column":55},"end":{"row":22,"column":0},"action":"insert","lines":["",""],"id":55},{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"insert","lines":["    "]}],[{"start":{"row":22,"column":0},"end":{"row":22,"column":4},"action":"remove","lines":["    "],"id":56},{"start":{"row":21,"column":55},"end":{"row":22,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":107,"column":31},"end":{"row":107,"column":45},"action":"remove","lines":["documentNumber"],"id":57},{"start":{"row":107,"column":31},"end":{"row":107,"column":32},"action":"insert","lines":["i"]},{"start":{"row":107,"column":32},"end":{"row":107,"column":33},"action":"insert","lines":["t"]},{"start":{"row":107,"column":33},"end":{"row":107,"column":34},"action":"insert","lines":["e"]},{"start":{"row":107,"column":34},"end":{"row":107,"column":35},"action":"insert","lines":["m"]},{"start":{"row":107,"column":35},"end":{"row":107,"column":36},"action":"insert","lines":["N"]},{"start":{"row":107,"column":36},"end":{"row":107,"column":37},"action":"insert","lines":["a"]},{"start":{"row":107,"column":37},"end":{"row":107,"column":38},"action":"insert","lines":["m"]},{"start":{"row":107,"column":38},"end":{"row":107,"column":39},"action":"insert","lines":["e"]}],[{"start":{"row":11,"column":33},"end":{"row":12,"column":0},"action":"insert","lines":["",""],"id":58},{"start":{"row":12,"column":0},"end":{"row":12,"column":1},"action":"insert","lines":["c"]},{"start":{"row":12,"column":1},"end":{"row":12,"column":2},"action":"insert","lines":["o"]},{"start":{"row":12,"column":2},"end":{"row":12,"column":3},"action":"insert","lines":["n"]},{"start":{"row":12,"column":3},"end":{"row":12,"column":4},"action":"insert","lines":["s"]},{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["t"]}],[{"start":{"row":11,"column":0},"end":{"row":11,"column":3},"action":"insert","lines":["// "],"id":59}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":3},"action":"remove","lines":["// "],"id":60}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":5},"action":"remove","lines":["const"],"id":61},{"start":{"row":11,"column":36},"end":{"row":12,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":37,"column":4},"end":{"row":37,"column":7},"action":"insert","lines":["// "],"id":62},{"start":{"row":38,"column":4},"end":{"row":38,"column":7},"action":"insert","lines":["// "]},{"start":{"row":39,"column":4},"end":{"row":39,"column":7},"action":"insert","lines":["// "]},{"start":{"row":40,"column":4},"end":{"row":40,"column":7},"action":"insert","lines":["// "]},{"start":{"row":41,"column":4},"end":{"row":41,"column":7},"action":"insert","lines":["// "]},{"start":{"row":43,"column":4},"end":{"row":43,"column":7},"action":"insert","lines":["// "]},{"start":{"row":44,"column":4},"end":{"row":44,"column":7},"action":"insert","lines":["// "]},{"start":{"row":45,"column":4},"end":{"row":45,"column":7},"action":"insert","lines":["// "]},{"start":{"row":47,"column":4},"end":{"row":47,"column":7},"action":"insert","lines":["// "]},{"start":{"row":48,"column":4},"end":{"row":48,"column":7},"action":"insert","lines":["// "]},{"start":{"row":49,"column":4},"end":{"row":49,"column":7},"action":"insert","lines":["// "]},{"start":{"row":51,"column":4},"end":{"row":51,"column":7},"action":"insert","lines":["// "]},{"start":{"row":52,"column":4},"end":{"row":52,"column":7},"action":"insert","lines":["// "]},{"start":{"row":53,"column":4},"end":{"row":53,"column":7},"action":"insert","lines":["// "]},{"start":{"row":54,"column":4},"end":{"row":54,"column":7},"action":"insert","lines":["// "]},{"start":{"row":55,"column":4},"end":{"row":55,"column":7},"action":"insert","lines":["// "]},{"start":{"row":56,"column":4},"end":{"row":56,"column":7},"action":"insert","lines":["// "]},{"start":{"row":57,"column":4},"end":{"row":57,"column":7},"action":"insert","lines":["// "]}],[{"start":{"row":66,"column":0},"end":{"row":68,"column":22},"action":"remove","lines":["","    // Initialize the errors","    var error = \"N/A\";"],"id":63},{"start":{"row":65,"column":6},"end":{"row":66,"column":0},"action":"remove","lines":["",""]}],[{"start":{"row":81,"column":21},"end":{"row":82,"column":26},"action":"remove","lines":["","        error = err.stack;"],"id":64}],[{"start":{"row":84,"column":0},"end":{"row":94,"column":0},"action":"remove","lines":["","    // Create an error array","    // var errorArray = {","    //     error: error,","    //     message: error","    // };","    var errorArray = [ ","      {error : error},","      {message : error}","    ];",""],"id":65}],[{"start":{"row":85,"column":0},"end":{"row":86,"column":0},"action":"remove","lines":["    //console.log(errorArray);",""],"id":66}],[{"start":{"row":98,"column":17},"end":{"row":98,"column":31},"action":"remove","lines":["documentNumber"],"id":67},{"start":{"row":98,"column":17},"end":{"row":98,"column":18},"action":"insert","lines":["i"]},{"start":{"row":98,"column":18},"end":{"row":98,"column":19},"action":"insert","lines":["t"]},{"start":{"row":98,"column":19},"end":{"row":98,"column":20},"action":"insert","lines":["e"]},{"start":{"row":98,"column":20},"end":{"row":98,"column":21},"action":"insert","lines":["m"]},{"start":{"row":98,"column":21},"end":{"row":98,"column":22},"action":"insert","lines":["N"]},{"start":{"row":98,"column":22},"end":{"row":98,"column":23},"action":"insert","lines":["a"]},{"start":{"row":98,"column":23},"end":{"row":98,"column":24},"action":"insert","lines":["m"]},{"start":{"row":98,"column":24},"end":{"row":98,"column":25},"action":"insert","lines":["e"]}],[{"start":{"row":98,"column":31},"end":{"row":98,"column":47},"action":"remove","lines":["calculatedNumber"],"id":68},{"start":{"row":98,"column":31},"end":{"row":98,"column":32},"action":"insert","lines":["i"]},{"start":{"row":98,"column":32},"end":{"row":98,"column":33},"action":"insert","lines":["t"]},{"start":{"row":98,"column":33},"end":{"row":98,"column":34},"action":"insert","lines":["e"]},{"start":{"row":98,"column":34},"end":{"row":98,"column":35},"action":"insert","lines":["m"]},{"start":{"row":98,"column":35},"end":{"row":98,"column":36},"action":"insert","lines":["N"]},{"start":{"row":98,"column":36},"end":{"row":98,"column":37},"action":"insert","lines":["a"]},{"start":{"row":98,"column":37},"end":{"row":98,"column":38},"action":"insert","lines":["m"]},{"start":{"row":98,"column":38},"end":{"row":98,"column":39},"action":"insert","lines":["e"]}],[{"start":{"row":98,"column":41},"end":{"row":99,"column":57},"action":"remove","lines":["","    console.log(`errors: ` + JSON.stringify(errorArray));"],"id":69}],[{"start":{"row":92,"column":41},"end":{"row":92,"column":57},"action":"remove","lines":["calculatedNumber"],"id":70},{"start":{"row":92,"column":41},"end":{"row":92,"column":42},"action":"insert","lines":["i"]},{"start":{"row":92,"column":42},"end":{"row":92,"column":43},"action":"insert","lines":["t"]},{"start":{"row":92,"column":43},"end":{"row":92,"column":44},"action":"insert","lines":["e"]},{"start":{"row":92,"column":44},"end":{"row":92,"column":45},"action":"insert","lines":["m"]},{"start":{"row":92,"column":45},"end":{"row":92,"column":46},"action":"insert","lines":["n"]},{"start":{"row":92,"column":46},"end":{"row":92,"column":47},"action":"insert","lines":["a"]},{"start":{"row":92,"column":47},"end":{"row":92,"column":48},"action":"insert","lines":["m"]},{"start":{"row":92,"column":48},"end":{"row":92,"column":49},"action":"insert","lines":["e"]}],[{"start":{"row":92,"column":45},"end":{"row":92,"column":46},"action":"remove","lines":["n"],"id":71},{"start":{"row":92,"column":45},"end":{"row":92,"column":46},"action":"insert","lines":["N"]}],[{"start":{"row":92,"column":41},"end":{"row":92,"column":42},"action":"insert","lines":["p"],"id":72},{"start":{"row":92,"column":42},"end":{"row":92,"column":43},"action":"insert","lines":["a"]},{"start":{"row":92,"column":43},"end":{"row":92,"column":44},"action":"insert","lines":["y"]},{"start":{"row":92,"column":44},"end":{"row":92,"column":45},"action":"insert","lines":["l"]},{"start":{"row":92,"column":45},"end":{"row":92,"column":46},"action":"insert","lines":["o"]},{"start":{"row":92,"column":46},"end":{"row":92,"column":47},"action":"insert","lines":["a"]},{"start":{"row":92,"column":47},"end":{"row":92,"column":48},"action":"insert","lines":["d"]},{"start":{"row":92,"column":48},"end":{"row":92,"column":49},"action":"insert","lines":["."]}],[{"start":{"row":92,"column":49},"end":{"row":92,"column":57},"action":"remove","lines":["itemName"],"id":73},{"start":{"row":92,"column":49},"end":{"row":92,"column":57},"action":"insert","lines":["itemName"]}],[{"start":{"row":98,"column":31},"end":{"row":98,"column":32},"action":"insert","lines":["p"],"id":74},{"start":{"row":98,"column":32},"end":{"row":98,"column":33},"action":"insert","lines":["a"]},{"start":{"row":98,"column":33},"end":{"row":98,"column":34},"action":"insert","lines":["y"]},{"start":{"row":98,"column":34},"end":{"row":98,"column":35},"action":"insert","lines":["l"]},{"start":{"row":98,"column":35},"end":{"row":98,"column":36},"action":"insert","lines":["o"]},{"start":{"row":98,"column":36},"end":{"row":98,"column":37},"action":"insert","lines":["a"]},{"start":{"row":98,"column":37},"end":{"row":98,"column":38},"action":"insert","lines":["d"]},{"start":{"row":98,"column":38},"end":{"row":98,"column":39},"action":"insert","lines":["."]}],[{"start":{"row":92,"column":57},"end":{"row":92,"column":78},"action":"remove","lines":[", errors: errorArray "],"id":75},{"start":{"row":92,"column":57},"end":{"row":92,"column":58},"action":"insert","lines":[" "]}],[{"start":{"row":10,"column":0},"end":{"row":10,"column":3},"action":"insert","lines":["// "],"id":76}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":44},"action":"remove","lines":["const tableName = process.env.CITIZEN_TABLE;"],"id":77},{"start":{"row":9,"column":0},"end":{"row":9,"column":31},"action":"insert","lines":["const tableName = productTable;"]}],[{"start":{"row":9,"column":18},"end":{"row":9,"column":19},"action":"insert","lines":["'"],"id":78}],[{"start":{"row":9,"column":31},"end":{"row":9,"column":32},"action":"insert","lines":["'"],"id":79}],[{"start":{"row":80,"column":31},"end":{"row":80,"column":38},"action":"remove","lines":["citizen"],"id":81},{"start":{"row":80,"column":31},"end":{"row":80,"column":32},"action":"insert","lines":["i"]},{"start":{"row":80,"column":32},"end":{"row":80,"column":33},"action":"insert","lines":["t"]},{"start":{"row":80,"column":33},"end":{"row":80,"column":34},"action":"insert","lines":["e"]},{"start":{"row":80,"column":34},"end":{"row":80,"column":35},"action":"insert","lines":["m"]}],[{"start":{"row":9,"column":33},"end":{"row":11,"column":36},"action":"remove","lines":["","// const tableCount = 'citizenTable-Count';","// const tableName = 'citizenTable';"],"id":82}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":33},"end":{"row":9,"column":33},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":7,"state":"start","mode":"ace/mode/javascript"}},"hash":"bcd424d6f9c03068a35d3cc1bf7f8d79e01bf3d1","timestamp":1726340467170}