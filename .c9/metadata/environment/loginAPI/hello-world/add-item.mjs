{"changed":true,"filter":false,"title":"add-item.mjs","tooltip":"/loginAPI/hello-world/add-item.mjs","value":"// Create clients and set shared const values outside of the handler.\n\n// Create a DocumentClient that represents the query to add an item\nimport { DynamoDBClient } from '@aws-sdk/client-dynamodb';\nimport { DynamoDBDocumentClient, PutCommand, ScanCommand, UpdateCommand } from '@aws-sdk/lib-dynamodb';\nconst client = new DynamoDBClient({region: 'us-west-2'});\nconst ddbDocClient = DynamoDBDocumentClient.from(client);\n\n// Get the DynamoDB table name from environment variables\nconst tableName = 'loginTable';\n\nexport const addItemHandler = async (event) => {\n    // if (event.httpMethod !== 'POST') {\n    //     throw new Error(`postMethod only accepts POST method, you tried: ${event.httpMethod} method.`);\n    // }\n    // All log statements are written to CloudWatch\n    console.info('received:', JSON.stringify(event));\n\n    // When testing with Postman or API Gateway, use JSON.parse()\n    const isRunningLocally = process.env.AWS_SAM_LOCAL;\n    var payload;\n    if (isRunningLocally) {\n      console.log(\"isRunningLocally =\", isRunningLocally);\n      payload = event.body;\n    }\n    else {\n      console.log(\"isRunningLocally =\", isRunningLocally);\n      payload = JSON.parse(event.body);\n    }\n    // When testing with local JSON file, don't use JSON.parse()\n    // const payload = event.body;\n\n    // Log payload in CloudWatch for potential issues\n    console.info('Logging payload:', JSON.stringify(payload));\n\n    // try {\n    //   var bucket = process.env.S3_BUCKET;\n    //   var portraitkey = calculatedNumber + \"_portrait.txt\";\n    //   var idImageBackKey = calculatedNumber + \"_idImageBack.txt\";\n    //   var idImageFrontKey = calculatedNumber + \"_idImageFront.txt\";\n       \n    //   var putPortraitResponse = await putObject(bucket,portraitkey,payload.portrait);\n    //   var putIdImageBackResponse = await putObject(bucket, idImageBackKey,payload.idImageBack);\n    //   var putIdImageFrontResponse = await putObject(bucket, idImageFrontKey,payload.idImageFront);\n      \n    //   console.log(\"putPortraitResponse\", putPortraitResponse);\n    //   console.log(\"putIdImageBackResponse\", putIdImageBackResponse);\n    //   console.log(\"putIdImageFrontResponse\", putIdImageFrontResponse);\n      \n    // } catch (err) {\n    //     console.log(\"Error: \", err);\n    // }\n    // payload.documentNumber = calculatedNumber;\n    // payload.portrait = portraitkey;\n    // payload.idImageBack = idImageBackKey;\n    // payload.idImageFront = idImageFrontKey;\n    \n    /*\n    const updatedPayload = {\n        ...payloadToUpdate,\n        ...payload\n    }\n  \n    */\n    \n    // Creates a new item\n    // https://docs.aws.amazon.com/AWSJavaScriptSDK/latest/AWS/DynamoDB/DocumentClient.html#put-property\n    var params = {\n        TableName : tableName,\n        Item: payload\n    };\n    console.log(\"payload=\");\n    console.log(payload);\n\n    try {\n        console.log(\"PutCommand\");\n        const data = await ddbDocClient.send(new PutCommand(params));\n        var item = data.Item;\n        console.log(\"Success - item added\");\n      } catch (err) {\n        console.log(\"Error\", err.stack);\n      }\n\n\n    const response = {\n        statusCode: 200,\n        // responseId: responseId,\n        // documentNumber: generatedNumber,\n        // error: errorArray\n        // body: JSON.stringify(item)\n        body: JSON.stringify({ itemName: payload.itemName })\n    };\n\n    // All log statements are written to CloudWatch\n    console.info(`statusCode: ${response.statusCode}`);\n    // console.log(`responseId: ` + responseId);\n    console.log(`itemName: ` + payload.itemName);\n    return response;\n};","undoManager":{"mark":-2,"position":0,"stack":[[{"start":{"row":9,"column":19},"end":{"row":9,"column":31},"action":"remove","lines":["productTable"],"id":2},{"start":{"row":9,"column":19},"end":{"row":9,"column":20},"action":"insert","lines":["l"]},{"start":{"row":9,"column":20},"end":{"row":9,"column":21},"action":"insert","lines":["o"]},{"start":{"row":9,"column":21},"end":{"row":9,"column":22},"action":"insert","lines":["g"]},{"start":{"row":9,"column":22},"end":{"row":9,"column":23},"action":"insert","lines":["i"]},{"start":{"row":9,"column":23},"end":{"row":9,"column":24},"action":"insert","lines":["n"]},{"start":{"row":9,"column":24},"end":{"row":9,"column":25},"action":"insert","lines":["T"]},{"start":{"row":9,"column":25},"end":{"row":9,"column":26},"action":"insert","lines":["a"]},{"start":{"row":9,"column":26},"end":{"row":9,"column":27},"action":"insert","lines":["b"]},{"start":{"row":9,"column":27},"end":{"row":9,"column":28},"action":"insert","lines":["l"]},{"start":{"row":9,"column":28},"end":{"row":9,"column":29},"action":"insert","lines":["e"]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":9,"column":29},"end":{"row":9,"column":29},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1727301730483}